Steps:

  - Name: GetProjectIds
    Worker: mongoDBConnector
    Job: aggregate_data
    Output: GCPProjectIds
    Params:
      collection_name: GCloudProjects
      pipeline:
        # - $match:
        #     project_id: 
        #       $regex: shared-it
        - $project:
            project: $project_id
        - $unset:
            - _id
  
  - Name: SetProjectRegionIds
    Worker: mongoDBConnector
    Job: aggregate_data
    Output: GCPProjectsEUW4
    Params:
      collection_name: GCloudProjects
      pipeline:
        # - $match:
        #     project_id: 
        #       $regex: shared-it
        - $set:
            region: europe-west4
        - $project:
            project: $project_id
            region: 1
        - $unset:
            - _id

  # - Name: GetToMongo.GCloudVPCs
  #   Job: get_data_to_mongo
  #   Input: GCPProjectIds.data
  #   Output: GCloudVPCs
  #   Params:
  #     from_worker: gcloudConnector
  #     model_name: VPCs

  # - Name: GetToMongo.GCloudSubnets
  #   Job: get_data_to_mongo
  #   Input: GCPProjectsEUW4.data
  #   Output: GCloudSubnets
  #   Params:
  #     from_worker: gcloudConnector
  #     model_name: Subnets

  - Name: GetToMongo.GCloudAddresses
    Job: get_data_to_mongo
    Input: GCPProjectsEUW4.data
    Output: GCloudAddresses
    Params:
      from_worker: gcloudConnector
      model_name: Addresses    


  - Name: GetToMongo.GCloudForwardingRules
    Job: get_data_to_mongo
    Input: GCPProjectsEUW4.data
    Output: GCloudForwardingRules
    Params:
      from_worker: gcloudConnector
      model_name: LBForwardingRules    

  - Name: GetToMongo.GCloudBackendBuckets
    Job: get_data_to_mongo
    Input: GCPProjectsEUW4.data
    Output: GCloudBackendBuckets
    Params:
      from_worker: gcloudConnector
      model_name: LBBackendBuckets